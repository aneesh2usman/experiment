# Generated by Django 4.2.3 on 2023-08-08 11:07

import compositefk.fields
import core.config
import core.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import psqlextra.backend.migrations.operations.add_default_partition
import psqlextra.backend.migrations.operations.create_partitioned_model
import psqlextra.manager.manager
import psqlextra.models.partitioned
import psqlextra.types


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="Container",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vehicle_identifier",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("vehicle_id", models.IntegerField(blank=True, null=True)),
                ("iso_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "container_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "container_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "container_position",
                    models.IntegerField(
                        default=core.config.ContainerPosition["UNKNOWN"]
                    ),
                ),
                ("valid_container", models.BooleanField(default=0)),
                (
                    "capture_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="Container",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="ContainerImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_identifier",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("container_id", models.IntegerField(blank=True, null=True)),
                (
                    "container_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "cam_angle",
                    models.SmallIntegerField(
                        choices=[
                            (0, "UNKNOWN"),
                            (1, "FRONT"),
                            (2, "Back"),
                            (3, "Left"),
                            (4, "Right"),
                            (5, "Top"),
                        ],
                        default=0,
                    ),
                ),
                ("image_path", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "image_type",
                    models.SmallIntegerField(
                        choices=[(0, "UNKNOWN"), (1, "Number Plate"), (2, "Front")],
                        default=0,
                    ),
                ),
                ("extra_data", models.JSONField(blank=True, null=True)),
                ("default_image", models.BooleanField(default=0)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="ContainerImage",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="ContainerImdg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("container_id", models.IntegerField(blank=True, null=True)),
                (
                    "container_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="ContainerImdg",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="ContainersDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("container_id", models.IntegerField(blank=True, null=True)),
                (
                    "container_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "container_owner",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("container_size", models.IntegerField(default=0)),
                ("imdg_present", models.BooleanField(default=0)),
                ("seal_present", models.BooleanField(default=0)),
                ("extra_data", models.JSONField(blank=True, null=True)),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="ContainersDetail",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="ContainerSeal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("container_id", models.IntegerField(blank=True, null=True)),
                (
                    "container_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="ContainerSeal",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vehicle_identifier",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("vehicle_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_type",
                    models.IntegerField(
                        choices=[(1, "TRUCK"), (2, "TRAIN")], default=1
                    ),
                ),
                ("in_time", models.DateTimeField(blank=True, null=True)),
                ("out_time", models.DateTimeField(blank=True, null=True)),
                (
                    "gate_enter",
                    models.SmallIntegerField(
                        choices=[(0, "UNKNOWN"), (1, "IN"), (2, "OUT")], default=0
                    ),
                ),
                ("gate_no", models.CharField(blank=True, max_length=100, null=True)),
                ("anpr_status", models.BooleanField(default=0)),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("extra_data", models.JSONField(blank=True, null=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="Vehicle",
            name="default",
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name="VehicleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_identifier",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "date_range",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                ("vehicle_id", models.IntegerField()),
                (
                    "cam_angle",
                    models.SmallIntegerField(
                        choices=[
                            (0, "UNKNOWN"),
                            (1, "FRONT"),
                            (2, "Back"),
                            (3, "Left"),
                            (4, "Right"),
                            (5, "Top"),
                        ],
                        default=0,
                    ),
                ),
                ("image_path", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "image_type",
                    models.SmallIntegerField(
                        choices=[(0, "UNKNOWN"), (1, "Number Plate"), (2, "Front")],
                        default=0,
                    ),
                ),
                ("extra_data", models.JSONField(blank=True, null=True)),
                ("default_image", models.BooleanField(default=0)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "vehicle",
                    core.fields.CustomCompositeForeignKey(
                        blank=True,
                        null=True,
                        null_if_equal=[],
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="image_parent_vehicle",
                        to="vehicle_tracking.vehicle",
                        to_fields={
                            "date_range": compositefk.fields.LocalFieldValue(
                                "date_range"
                            ),
                            "id": compositefk.fields.LocalFieldValue("vehicle_id"),
                        },
                    ),
                ),
            ],
            partitioning_options={
                "method": psqlextra.types.PostgresPartitioningMethod["RANGE"],
                "key": ["date_range"],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name="VehicleImage",
            name="default",
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["vehicle_identifier"], name="vehicle_tra_vehicle_ec400e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["vehicle_identifier", "date_range", "gate_enter", "created"],
                name="vehicle_tra_vehicle_e040c7_idx",
            ),
        ),
        migrations.AddField(
            model_name="containerseal",
            name="container",
            field=core.fields.CustomCompositeForeignKey(
                blank=True,
                null=True,
                null_if_equal=[],
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seal_parent_container",
                to="vehicle_tracking.container",
                to_fields={
                    "date_range": compositefk.fields.LocalFieldValue("date_range"),
                    "id": compositefk.fields.LocalFieldValue("container_id"),
                },
            ),
        ),
        migrations.AddField(
            model_name="containersdetail",
            name="container",
            field=core.fields.CustomCompositeOneToOneField(
                blank=True,
                null=True,
                null_if_equal=[],
                on_delete=django.db.models.deletion.CASCADE,
                related_name="container",
                to="vehicle_tracking.container",
                to_fields={
                    "date_range": compositefk.fields.LocalFieldValue("date_range"),
                    "id": compositefk.fields.LocalFieldValue("container_id"),
                },
            ),
        ),
        migrations.AddField(
            model_name="containerimdg",
            name="container",
            field=core.fields.CustomCompositeForeignKey(
                blank=True,
                null=True,
                null_if_equal=[],
                on_delete=django.db.models.deletion.CASCADE,
                related_name="imgd_parent_container",
                to="vehicle_tracking.container",
                to_fields={
                    "date_range": compositefk.fields.LocalFieldValue("date_range"),
                    "id": compositefk.fields.LocalFieldValue("container_id"),
                },
            ),
        ),
        migrations.AddField(
            model_name="containerimage",
            name="container",
            field=core.fields.CustomCompositeForeignKey(
                blank=True,
                null=True,
                null_if_equal=[],
                on_delete=django.db.models.deletion.CASCADE,
                related_name="image_parent_container",
                to="vehicle_tracking.container",
                to_fields={
                    "date_range": compositefk.fields.LocalFieldValue("date_range"),
                    "id": compositefk.fields.LocalFieldValue("container_id"),
                },
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="vehicle",
            field=core.fields.CustomCompositeForeignKey(
                blank=True,
                null=True,
                null_if_equal=[],
                on_delete=django.db.models.deletion.CASCADE,
                related_name="container_parent_vehicle",
                to="vehicle_tracking.vehicle",
                to_fields={
                    "date_range": compositefk.fields.LocalFieldValue("date_range"),
                    "id": compositefk.fields.LocalFieldValue("vehicle_id"),
                },
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleimage",
            index=models.Index(
                fields=["vehicle_identifier"], name="vehicle_tra_vehicle_610d45_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleimage",
            index=models.Index(
                fields=["vehicle_identifier", "date_range", "cam_angle", "created"],
                name="vehicle_tra_vehicle_0c33f8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="containerseal",
            index=models.Index(
                fields=["container_code"], name="vehicle_tra_contain_479d5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="containerseal",
            index=models.Index(
                fields=["container_code", "date_range"],
                name="vehicle_tra_contain_0a2f87_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="containersdetail",
            index=models.Index(
                fields=["container_owner"], name="vehicle_tra_contain_6fb5be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="containersdetail",
            index=models.Index(
                fields=["container_code"], name="vehicle_tra_contain_76420f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="containersdetail",
            index=models.Index(
                fields=["container_code", "date_range"],
                name="vehicle_tra_contain_538d6f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="containerimdg",
            index=models.Index(
                fields=["container_code"], name="vehicle_tra_contain_490800_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="containerimdg",
            index=models.Index(
                fields=["container_code", "date_range"],
                name="vehicle_tra_contain_74ab5f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="containerimage",
            index=models.Index(
                fields=["container_code"], name="vehicle_tra_contain_8309fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="containerimage",
            index=models.Index(
                fields=["container_code", "date_range"],
                name="vehicle_tra_contain_4c20e2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="containerimage",
            index=models.Index(
                fields=["container_code", "date_range", "cam_angle", "created"],
                name="vehicle_tra_contain_72b3d7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["vehicle_identifier"], name="vehicle_tra_vehicle_f48821_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["container_code"], name="vehicle_tra_contain_05dbec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["vehicle_identifier", "container_code"],
                name="vehicle_tra_vehicle_0404d1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["container_code", "date_range", "created"],
                name="vehicle_tra_contain_74d1fb_idx",
            ),
        ),
    ]
